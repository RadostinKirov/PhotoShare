{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = environment.apiUrl;\nexport let ContentService = /*#__PURE__*/(() => {\n  class ContentService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    loadPhotos() {\n      return this.http.get(`${API_URL}`);\n    }\n\n    loadRecentPhotos() {\n      return this.http.get(`${API_URL}/photo/recent`);\n    }\n\n    loadMostLikedPhotos() {\n      return this.http.get(`${API_URL}/photo/mostLiked`);\n    }\n\n    loadPhoto(id) {\n      return this.http.get(`${API_URL}/photo/details/${id}`);\n    }\n\n    create(data) {\n      console.log('data -> ', data);\n      return this.http.post(`${API_URL}/photo/create`, data, {\n        withCredentials: true\n      });\n    }\n\n    edit(data) {\n      return this.http.post(`${API_URL}/photo/edit/${data.photoId}`, data, {\n        withCredentials: true\n      });\n    }\n\n    like(userId, photoId) {\n      return this.http.post(`${API_URL}/photo/like/${photoId}`, {\n        userId,\n        photoId\n      }, {\n        withCredentials: true\n      });\n    }\n\n    delete(photoId) {\n      return this.http.post(`${API_URL}/photo/delete/${photoId}`, photoId, {\n        withCredentials: true\n      });\n    }\n\n  }\n\n  ContentService.ɵfac = function ContentService_Factory(t) {\n    return new (t || ContentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ContentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContentService,\n    factory: ContentService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContentService;\n})();","map":null,"metadata":{},"sourceType":"module"}