{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"section\", 10);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"autohide in \", ctx_r0.time, \"\");\n  }\n}\n\nfunction LoginComponent_ng_container_10_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \"Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_10_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \"Username length must be at least 5 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_10_p_1_Template, 2, 0, \"p\", 11);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_10_p_2_Template, 2, 0, \"p\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors.minlength);\n  }\n}\n\nfunction LoginComponent_ng_container_16_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \"Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_16_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \"Password length must be at least 5 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_16_p_1_Template, 2, 0, \"p\", 11);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_16_p_2_Template, 2, 0, \"p\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r4 = i0.ɵɵreference(15);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors == null ? null : _r4.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors == null ? null : _r4.errors.minlength);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(activateRoute, userService, router) {\n      this.activateRoute = activateRoute;\n      this.userService = userService;\n      this.router = router;\n      this.errorMessage = '';\n      this.time = 5;\n    }\n\n    setError(err) {\n      console.error('An error occure -> ', err);\n      this.time = 5;\n      const timer = setInterval(() => {\n        if (this.time <= 0) {\n          clearInterval(timer);\n        }\n\n        this.time--;\n\n        if (this.time == 0) {\n          this.errorMessage = '';\n        }\n      }, 1000);\n    }\n\n    login(form) {\n      const username = form.value.username;\n      const password = form.value.password;\n\n      if (username == '' || password == '') {\n        this.errorMessage = 'Form error -> All fields are required!';\n        this.setError(this.errorMessage);\n        return;\n      }\n\n      let response = this.userService.login({\n        username,\n        password\n      }).subscribe({\n        next: user => {\n          this.user = user;\n          this.router.navigate(['/']);\n        },\n        error: error => {\n          this.errorMessage = `Server error -> ${error.error}`;\n          this.setError(this.errorMessage);\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"for\", \"username\"], [\"ngModel\", \"\", \"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"Username\", \"value\", \"\", \"required\", \"\", \"minlength\", \"5\"], [\"usernameInput\", \"ngModel\"], [\"for\", \"password\"], [\"ngModel\", \"\", \"name\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"value\", \"\", \"required\", \"\", \"minlength\", \"5\"], [\"passwordInput\", \"ngModel\"], [1, \"btn\"], [1, \"notifications\", \"error\"], [\"class\", \"errortext\", 4, \"ngIf\"], [1, \"errortext\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵtemplate(0, LoginComponent_ng_container_0_Template, 6, 2, \"ng-container\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r1 = i0.ɵɵreference(2);\n\n          return ctx.login(_r1);\n        });\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵelementStart(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4, 5);\n        i0.ɵɵtemplate(10, LoginComponent_ng_container_10_Template, 3, 2, \"ng-container\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\");\n        i0.ɵɵelementStart(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 7, 8);\n        i0.ɵɵtemplate(16, LoginComponent_ng_container_16_Template, 3, 2, \"ng-container\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 9);\n        i0.ɵɵtext(18, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(9);\n\n        const _r4 = i0.ɵɵreference(15);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage.length != 0);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", _r2.touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", _r4.touched);\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i4.MinLengthValidator],\n    styles: [\"form[_ngcontent-%COMP%]{max-width:40em;min-width:15em;background-color:hsla(0,0%,100%,.849);border-radius:1rem;margin:3em auto;display:flex;flex-direction:column;padding:1em;box-shadow:2px 10px 1.5em 5px #000}form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:auto;font-size:2em;text-transform:uppercase;color:#000}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{margin:1em 1em 0;display:flex;flex-direction:column}label[_ngcontent-%COMP%]{margin:0 0 .2em;color:#000;font-size:1.5rem}input[_ngcontent-%COMP%]{text-decoration:inherit;background-color:initial;border:none;border-bottom:2px solid #07011f;font-family:system-ui;font-size:1rem;padding:.5rem 1.5rem}form[_ngcontent-%COMP%]   button.btn[_ngcontent-%COMP%]{margin:1em;padding:.5rem;border:none;border-radius:.5em;font-size:1.2rem;box-sizing:2px 2px 2px #000}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:rgba(0,128,0,.562)}.errortext[_ngcontent-%COMP%]{background-color:initial;font-family:system-ui;font-size:1rem;color:#b90909}.notifications[_ngcontent-%COMP%]{margin:2em;padding:1em;position:absolute;right:0;width:20em;border:2px solid;border-image-slice:1;border-radius:1em;color:#fff}.error[_ngcontent-%COMP%]{background-color:rgba(245,58,136,.568);border-color:rgba(255,0,0,.315)}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}