{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nconst API_URL = environment.apiUrl;\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, cookieService) {\n      this.http = http;\n      this.cookieService = cookieService;\n      this.errorMessage = '';\n    }\n\n    get isLogged() {\n      return !!this.userInfo;\n    }\n\n    get userInfo() {\n      const jwt = this.cookieService.get(\"SESSION_TOKEN\");\n\n      try {\n        return jwtDecode(jwt);\n      } catch (err) {\n        return null;\n      }\n    }\n\n    register(data) {\n      return this.http.post(`${API_URL}/auth/register`, data, {\n        withCredentials: true\n      });\n    }\n\n    login(data) {\n      return this.http.post(`${API_URL}/auth/login`, data, {\n        withCredentials: true\n      });\n    }\n\n    logout() {\n      console.log('logout clicked');\n      this.cookieService.deleteAll();\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}